name: Docker
on:
  schedule:
    - cron: '0 1 * * *'
  push:
    branches:
      - '*'
    tags:
      - '*.*.*'
jobs:
  docker-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Generate Docker tag
        id: docker_tag
        run: |
          DOCKER_IMAGE=miniflux/miniflux
          DOCKER_VERSION=dev
          if [ "${{ github.event_name }}" = "schedule" ]; then
          DOCKER_VERSION=nightly
          TAGS="${DOCKER_IMAGE}:${DOCKER_VERSION},ghcr.io/${DOCKER_IMAGE}:${DOCKER_VERSION}"
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
          DOCKER_VERSION=${GITHUB_REF#refs/tags/}
          TAGS="${DOCKER_IMAGE}:${DOCKER_VERSION},ghcr.io/${DOCKER_IMAGE}:${DOCKER_VERSION},${DOCKER_IMAGE}:latest,ghcr.io/${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=ver::${DOCKER_VERSION}
          echo ::set-output name=images::${{ secrets.DOCKERHUB_USERNAME }}/miniflux,ghcr.io/${{ github.repository_owner }}/miniflux

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata
        uses: crazy-max/ghaction-docker-meta@v2
        id: meta
        with:
          images: ${{ steps.docker_tag.outputs.images }}
          tags: |
            type=raw,${{ steps.docker_tag.outputs.ver }}

      - name: Build and push
        uses: docker/bake-action@v1
        with:
          files: |
            ./packaging/docker/docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: build
          push: ${{ github.event_name != 'pull_request' }}
